#:kivy 1.9.1
#:import Factory kivy.factory.Factory
#:import KivyCamera kivy_cv

<SlideLayout>:
    anim_type: 'slide_above_anim'

<SlideMenu>:
    orientation: 'vertical'

    ModernButton:
        text: 'MAIN'
        on_release: app.screen_man.back_to_main()
    ModernButton:
        id: modify_screen
        disabled: True
        text: 'MODIFY SCREEN'
        on_release: app.screen_man.current = 'main_screen'; app.slide_layout.toggle_state()
        on_release: if not app.dynamic_layout.modify_mode: app.dynamic_layout.modify_screen(); #app.variables.toggle_update_clock(False)
    ModernButton:
        id: settings
        disabled: False
        text: 'SETTINGS'
        on_release: app.open_settings(); app.screen_man.current = 'main_screen'; app.slide_layout.toggle_state()
        on_release: if app.dynamic_layout.modify_mode: app.dynamic_layout.end_modify(); app.variables.toggle_update_clock(True)
    ModernButton:
        id: add_widget
        disabled: True
        text: 'ADD WIDGET'
        on_release: app.dynamic_layout.add_widget_json(); app.slide_layout.toggle_state()
    ModernButton:
        id: admin_login
        text: 'ADMIN LOGIN'
        on_release: app.screen_man.admin_toggle()

<ScreenManagement>:
    ignition_input: int(app.variables.DI_IGNITION)
    reverse_input: int(app.variables.SYS_REVERSE_CAM_ON)
    app_ref: app

    canvas.before:
        Color:
            #rgba: .271, .275, .306, 1

            #rgba: .337, .341, .38, 1
            rgba: .153, .153, .153, 1
        Rectangle:
            pos: self.pos
            size: self.size

    Screen:
        name: 'off_screen'
    MainScreen:
        name: 'main_screen'
    CameraScreen:
        name: 'camera_screen'
    PasscodeScreen:
        id: passcode_screen
        name: 'passcode_screen'

<Variables>:
    app_ref: app

<DynamicLayout>:
    app_ref: app

<MyScatterLayout>:
    app_ref: app

<MainScreen>:
    id: main_screen
    app_ref: app
    item_edit_popup: item_edit_popup.__self__
    engine_kill_popup: engine_kill_popup.__self__
    on_parent: app.main_screen_ref = self

    FloatLayout:
        id: main_layout
        orientation: 'horizontal'

    ScreenItemEditPopup:
        id: item_edit_popup
        app_ref: app
        modify_mode: app.dynamic_layout.modify_mode
        dynamic_layout: app.dynamic_layout
        button_on_text: button_on_text
        button_off_text: button_off_text
        invert_check: invert_check
        variable_spinner: variable_spinner
        widget_spinner: widget_spinner
        title: "Modify"
        size_hint: None, None
        size: 600, 265
        pos_hint: {'middle': 1, 'top': 1}
        on_parent: if self.parent == main_screen: self.parent.remove_widget(self)

        BoxLayout:
            orientation: 'vertical'
            spacing: 5
            padding: 5

            BoxLayout:
                orientation: 'horizontal'
                size_hint: 1, .2
                spacing: 10

                BoxLayout:
                    orientation: 'horizontal'
                    size_hint: .5, 1
                    padding: 1

                    Label:
                        text: 'Variable:'
                        size_hint: .25, 1
                        text_size: self.size
                        halign: 'left'
                        valign: 'middle'

                    Spinner:
                        id: variable_spinner
                        size_hint: .75, 1
                        option_cls: Factory.get("SpinnerLabel")
                        font_size: '13sp'
                        text: 'DI_0'
                        values: app.variables.display_var_tags

                BoxLayout:
                    orientation: 'horizontal'
                    size_hint: .5, 1
                    padding: 1

                    Label:
                        text: 'Widget:'
                        size_hint: .25, 1
                        text_size: self.size
                        halign: 'left'
                        valign: 'middle'

                    Spinner:
                        id: widget_spinner
                        size_hint: .75, 1
                        option_cls: Factory.get("SpinnerLabel")
                        font_size: '13sp'
                        text: 'Toggle Button'
                        values: ['Indicator', 'Button', 'Toggle Button', 'Label']

            BoxLayout:
                orientation: 'horizontal'
                size_hint: 1, .3
                spacing: 10

                BoxLayout:
                    orientation: 'horizontal'
                    size_hint: .5, 1
                    padding: 1

                    Label:
                        text: 'On Text:'
                        size_hint: .25, 1
                        text_size: self.size
                        halign: 'left'
                        valign: 'middle'

                    TextInput:
                        id: button_on_text
                        size_hint: .75, 1

                BoxLayout:
                    orientation: 'horizontal'
                    size_hint: .5, 1
                    padding: 1

                    Label:
                        text: 'Off Text:'
                        size_hint: .25, 1
                        text_size: self.size
                        halign: 'left'
                        valign: 'middle'

                    TextInput:
                        id: button_off_text
                        size_hint: .75, 1

            BoxLayout:
                orientation: 'horizontal'
                size_hint: 1, 0.15
                padding: 1

                BoxLayout:
                    orientation: 'horizontal'

                    Label:
                        text: 'Invert:'
                        size_hint: .1, 1
                        text_size: self.size
                        halign: 'left'
                        valign: 'middle'

                    CheckBox:
                        id: invert_check
                        size_hint: .08, 1
                        halign: 'left'

                    BoxLayout:
                        size_hint: .82, 1

            BoxLayout:
                orientation: 'horizontal'
                size_hint: 1, 0.15
                padding: 1

            BoxLayout:
                orientation: 'horizontal'
                size_hint: 1, 0.2
                spacing: 5

                BoxLayout:
                    size_hint: .5, 1

                ModernButton:
                    text: 'OK'
                    size_hint: .2, 1
                    on_release: item_edit_popup.save_item()

                ModernButton:
                    text: 'Del'
                    size_hint: .1, 1
                    on_release: item_edit_popup.delete_item()

                ModernButton:
                    text: 'Cancel'
                    size_hint: .2, 1
                    on_release: item_edit_popup.dismiss()

    Popup:
        id: engine_kill_popup
        title: "Engine Kill"
        size_hint: None, None
        size: 300, 200
        on_parent: if self.parent == main_screen: self.parent.remove_widget(self)

        BoxLayout:
            orientation: 'vertical'
            padding: 5

            Label:
                text: 'Out of PARK without LOGIN, engine has been killed.'
                text_size: self.size
                halign: 'center'
                valign: 'middle'

            ModernButton:
                text: 'OK'
                on_release: engine_kill_popup.dismiss()

<-SettingAlias>:
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(10)
    content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos

        Label:
            size_hint_x: .66
            id: labellayout
            markup: True
            text: root.title or ''
            font_size: '15sp'
            text_size: self.width - 32, None

        BoxLayout:
            id: content
            size_hint_x: .33

            Label:
                text: root.value or ''
                pos: root.pos
                font_size: '15sp'

<-SettingAction>:
    app_ref: app
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(20)
    content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos

        Label:
            size_hint_x: .66
            id: labellayout
            markup: True
            text: root.title or ''
            font_size: '15sp'
            text_size: self.width - 32, None

        BoxLayout:
            id: content
            size_hint_x: .33

            Label:
                #text: root.value or ''
                pos: root.pos
                font_size: '15sp'

<-SettingScript>:
    app_ref: app
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(10)
    #content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos

        Label:
            #size_hint_x: .66
            id: labellayout
            markup: True
            multiline: True
            text: (root.value or 'new script').replace("[tab]", '    ')
            font_size: '15sp'
            text_size: self.width - 32, None

        #BoxLayout:
        #    id: content
        #    size_hint_x: .33

        #    Label:
        #        text: root.value or ''
        #        pos: root.pos
        #        font_size: '15sp'

<-SettingPath>:
    app_ref: app
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(10)
    content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos

        Label:
            size_hint_x: .66
            id: labellayout
            markup: True
            text: u'{0}\n[size=13sp][color=999999]{1}[/color][/size]'.format(root.title or '', root.desc or '')
            font_size: '15sp'
            text_size: self.width - 32, None

        BoxLayout:
            id: content
            size_hint_x: .33

            Label:
                text: root.value or ''
                pos: root.pos
                font_size: '15sp'

<SpinnerLabel@SpinnerOption>:
    font_size: '13sp'

<DynToggleButton, DynButton>:
    ignition_input: int(app.variables.DI_IGNITION)
    text_size: self.size
    font_size: '18sp'
    halign: 'center'
    valign: 'middle'
    background_normal: 'button.png'
    background_down: 'button_pressed.png'

<ModernButton@Button>:
    background_normal: 'button.png'
    background_down: 'button_pressed.png'

<PasscodeButton@ModernButton>:
    on_release: app.screen_man.try_passcode(self.text)

<DynLabel>:
    text_size: self.size
    font_size: self.size[1] / 2
    halign: 'center'
    valign: 'middle'

<DynItem>:
    app_ref: app
    data_change: app.variables.data_change
    var_tag: ''
    var_alias: ''
    widget: ''
    button_on_text: ''
    button_off_text: ''
    invert: False

<PasscodeScreen>:
    id: passcode_screen
    fail_popup: fail_popup.__self__
    app_ref: app

    GridLayout:
        cols: 3
        rows: 4
        spacing: 5
        padding: 5
        size_hint_x: None
        width: 400
        pos: 200, 0

        PasscodeButton:
            text: '7'
        PasscodeButton:
            text: '8'
        PasscodeButton:
            text: '9'
        PasscodeButton:
            text: '4'
        PasscodeButton:
            text: '5'
        PasscodeButton:
            text: '6'
        PasscodeButton:
            text: '1'
        PasscodeButton:
            text: '2'
        PasscodeButton:
            text: '3'
        PasscodeButton:
            text: '0'

    Popup:
        id: fail_popup
        title: "Invalid Passcode"
        size_hint: None, None
        size: 150, 150
        on_parent: if self.parent == passcode_screen: self.parent.remove_widget(self)

        BoxLayout:
            id: fail_layout
            orientation: 'vertical'
            padding: 5

            ModernButton:
                id: fail_button
                text: 'OK'
                on_release: fail_popup.dismiss(); app.screen_man.current = 'main_screen'

<CameraScreen>:
    id: camera_screen
    camera_toggle: app.variables.SYS_REVERSE_CAM_ON





