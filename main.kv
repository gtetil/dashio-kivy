#:kivy 1.9.1
#:import Factory kivy.factory.Factory

<SlideLayout>:
    anim_type: 'slide_above_anim'

<SlideMenu>:
    orientation: 'vertical'

    Button:
        text: 'Main'
        on_release: app.screen_man.current = 'main_screen'; app.slide_layout.toggle_state()
        on_release: if app.dynamic_layout.modify_mode: app.dynamic_layout.end_modify(); app.variables.toggle_update_clock(True)
    Button:
        text: 'Modify Main Screen'
        on_release: app.screen_man.current = 'main_screen'; app.slide_layout.toggle_state()
        on_release: if not app.dynamic_layout.modify_mode: app.dynamic_layout.build_layout(); app.dynamic_layout.modify_screen(); app.variables.toggle_update_clock(False)
    Button:
        text: 'Settings'
        on_release: app.screen_man.current = 'settings_screen'; app.slide_layout.toggle_state()
    Button:
        text: 'Settings2'
        on_release: app.open_settings(); app.slide_layout.toggle_state()

<ScreenManagement>:
    ignition_input: int(app.variables.DI_IGNITION)
    reverse_input: int(app.variables.SYS_REVERSE_CAM_ON)
    app_ref: app

    canvas.before:
        Color:
            rgba: 0.2, 0.2, 0.2, 1
        Rectangle:
            pos: self.pos
            size: self.size

    Screen:
        name: 'off_screen'
    MainScreen:
        name: 'main_screen'
    SettingsScreen:
        name: 'settings_screen'
    CameraScreen:
        name: 'camera_screen'
    PasscodeScreen:
        name: 'passcode_screen'

<Variables>:
    app_ref: app

<DynamicLayout>:
    app_ref: app

<MainScreen>:
    id: main_screen
    app_ref: app
    item_edit_popup: item_edit_popup.__self__
    on_parent: app.dynamic_layout.main_screen_ref(self); app.dynamic_layout.build_layout()

    BoxLayout:
        id: main_layout
        orientation: 'horizontal'
        padding: 10

        GridLayout:
            id: indicator_layout
            cols: 1
            spacing: 5
            padding: 5
            size_hint_x: 0.25

        GridLayout:
            id: button_layout
            cols: 3
            rows: 2
            spacing: 5
            padding: 5
            size_hint_x: 0.75

    ScreenItemEditPopup:
        id: item_edit_popup
        modify_mode: app.dynamic_layout.modify_mode
        dynamic_layout: app.dynamic_layout
        label_input: label_input
        toggle_check: toggle_check
        enable_check: enable_check
        invert_check: invert_check
        channel_spinner: channel_spinner
        toggle_layout: toggle_layout
        title: "Modify"
        size_hint: None, None
        size: 300, 250
        pos_hint: {'middle': 1, 'top': 1}
        on_parent: if self.parent == main_screen: self.parent.remove_widget(self)

        BoxLayout:
            orientation: 'vertical'
            spacing: 5
            padding: 5

            GridLayout:
                rows: 1
                cols: 3
                size_hint: 1, 0.22
                spacing: 5

                BoxLayout:
                    orientation: 'horizontal'

                    Label:
                        text: 'Enable:'
                        size_hint: .6, 1

                    CheckBox:
                        id: enable_check
                        size_hint: .4, 1

                BoxLayout:
                    id: toggle_layout
                    orientation: 'horizontal'

                    Label:
                        text: 'Toggle:'
                        size_hint: .6, 1

                    CheckBox:
                        id: toggle_check
                        size_hint: .4, 1

                BoxLayout:
                    orientation: 'horizontal'

                    Label:
                        text: 'Invert:'
                        size_hint: .6, 1

                    CheckBox:
                        id: invert_check
                        size_hint: .4, 1

            BoxLayout:
                orientation: 'horizontal'
                size_hint: 1, 0.21
                padding: 1

                Label:
                    text: 'Channel:'
                    size_hint: .25, 1
                    text_size: self.size
                    halign: 'left'
                    valign: 'middle'

                Spinner:
                    id: channel_spinner
                    size_hint: .75, 1
                    option_cls: Factory.get("SpinnerLabel")
                    font_size: '13sp'
                    text: 'DI_0'
                    values: app.variables.display_var_tags

            TextInput:
                id: label_input
                size_hint: 1, 0.27

            GridLayout:
                rows: 1
                cols: 2
                size_hint: 1, 0.3
                spacing: 5

                Button:
                    text: 'OK'
                    on_release: item_edit_popup.save_item()

                Button:
                    text: 'Cancel'
                    on_release: item_edit_popup.dismiss()

<SettingsScreen>:
    BoxLayout:
        id: settings_layout
        orientation: 'vertical'
        padding: 10

        BoxLayout:
            id: upper_settings_layout
            orientation: 'horizontal'
            size_hint_y: 0.6
            spacing: 5

            BoxLayout:
                id: backlight_layout
                orientation: 'vertical'
                size_hint_x: 0.15
                padding: 10
                spacing: 5

                Label:
                    text: 'Screen Dim\nBrightness'
                    markup: True
                    size_hint_y: 0.15
                    text_size: self.size
                    halign: 'center'
                    valign: 'middle'

                Slider:
                    id: screen_brightness_slider
                    on_touch_move: app.variables.sys_cmd('SYS_SCREEN_BRIGHTNESS', str(int(self.value)))
                    on_touch_up: app.variables.set('SYS_SCREEN_BRIGHTNESS', str(int(self.value)))
                    orientation: 'vertical'
                    min: 20
                    max: 200
                    value: int(app.variables.SYS_SCREEN_BRIGHTNESS)
                    size_hint_y: 0.85

            BoxLayout:
                orientation: 'vertical'
                size_hint_x: 0.15
                padding: 0, 4, 0, 0
                spacing: 15

                BoxLayout:
                    orientation: 'vertical'
                    size_hint_y: 0.25
                    padding: 5, 0, 0, 0

                    Label:
                        text: 'Screen Off Delay:'

                    BoxLayout:
                        orientation: 'horizontal'

                        FloatInput:
                            id: screen_off_delay_input
                            on_text: app.variables.set('SYS_SCREEN_OFF_DELAY', self.text)
                            text: app.variables.SYS_SCREEN_OFF_DELAY
                            size_hint_x: 0.4
                            multiline: False

                        Label:
                            text: 'seconds'
                            size_hint_x: 0.6

                BoxLayout:
                    orientation: 'vertical'
                    size_hint_y: 0.25
                    padding: 5, 0, 0, 0

                    Label:
                        text: 'Shutdown Delay:'

                    BoxLayout:
                        orientation: 'horizontal'

                        FloatInput:
                            id: shutdown_delay_input
                            on_text: app.variables.set('SYS_SHUTDOWN_DELAY', self.text)
                            text: app.variables.SYS_SHUTDOWN_DELAY
                            size_hint_x: 0.4
                            multiline: False

                        Label:
                            text: 'minutes'
                            size_hint_x: 0.6

                BoxLayout:
                    orientation: 'vertical'
                    size_hint_y: 0.5

            BoxLayout:
                orientation: 'vertical'
                size_hint_x: 0.7

        BoxLayout:
            orientation: 'vertical'
            size_hint_y: 0.4
            spacing: 5

            AutoVar:
                operator: app.variables.AUTOVAR_OPERATOR_1
                operator_text: 'AUTOVAR_OPERATOR_1'
                operator_2: app.variables.AUTOVAR_OPERATOR_2_1
                operator_text_2: 'AUTOVAR_OPERATOR_2_1'
                get_var: app.variables.AUTOVAR_GET_VAR_1
                get_var_text: 'AUTOVAR_GET_VAR_1'
                get_var_2: app.variables.AUTOVAR_GET_VAR_2_1
                get_var_text_2: 'AUTOVAR_GET_VAR_2_1'
                set_var: app.variables.AUTOVAR_SET_VAR_1
                set_var_text: 'AUTOVAR_SET_VAR_1'

            AutoVar:
                operator: app.variables.AUTOVAR_OPERATOR_2
                operator_text: 'AUTOVAR_OPERATOR_2'
                operator_2: app.variables.AUTOVAR_OPERATOR_2_2
                operator_text_2: 'AUTOVAR_OPERATOR_2_2'
                get_var: app.variables.AUTOVAR_GET_VAR_2
                get_var_text: 'AUTOVAR_GET_VAR_2'
                get_var_2: app.variables.AUTOVAR_GET_VAR_2_2
                get_var_text_2: 'AUTOVAR_GET_VAR_2_2'
                set_var: app.variables.AUTOVAR_SET_VAR_2
                set_var_text: 'AUTOVAR_SET_VAR_2'

            AutoVar:
                operator: app.variables.AUTOVAR_OPERATOR_3
                operator_text: 'AUTOVAR_OPERATOR_3'
                operator_2: app.variables.AUTOVAR_OPERATOR_2_3
                operator_text_2: 'AUTOVAR_OPERATOR_2_3'
                get_var: app.variables.AUTOVAR_GET_VAR_3
                get_var_text: 'AUTOVAR_GET_VAR_3'
                get_var_2: app.variables.AUTOVAR_GET_VAR_2_3
                get_var_text_2: 'AUTOVAR_GET_VAR_2_3'
                set_var: app.variables.AUTOVAR_SET_VAR_3
                set_var_text: 'AUTOVAR_SET_VAR_3'

            AutoVar:
                operator: app.variables.AUTOVAR_OPERATOR_4
                operator_text: 'AUTOVAR_OPERATOR_4'
                operator_2: app.variables.AUTOVAR_OPERATOR_2_4
                operator_text_2: 'AUTOVAR_OPERATOR_2_4'
                get_var: app.variables.AUTOVAR_GET_VAR_4
                get_var_text: 'AUTOVAR_GET_VAR_4'
                get_var_2: app.variables.AUTOVAR_GET_VAR_2_4
                get_var_text_2: 'AUTOVAR_GET_VAR_2_4'
                set_var: app.variables.AUTOVAR_SET_VAR_4
                set_var_text: 'AUTOVAR_SET_VAR_4'


<-SettingAlias>:
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(10)
    content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos

        Label:
            size_hint_x: .66
            id: labellayout
            markup: True
            text: root.title or ''
            font_size: '15sp'
            text_size: self.width - 32, None

        BoxLayout:
            id: content
            size_hint_x: .33

            Label:
                text: root.value or ''
                pos: root.pos
                font_size: '15sp'

<SpinnerLabel@SpinnerOption>:
    font_size: '13sp'

<DynToggleButton, DynButton>:
    text_size: self.size
    font_size: '18sp'
    halign: 'center'
    valign: 'middle'

<DynToggleButton, DynButton>:
    ignition_input: int(app.variables.DI_IGNITION)

<DynItem>:
    app_ref: app
    data_change: app.variables.data_change

<PasscodeScreen>:
    id: passcode_screen
    fail_popup: fail_popup.__self__

    GridLayout:
        cols: 3
        rows: 4
        spacing: 5
        padding: 5
        size_hint_x: None
        width: 400
        pos: 200, 0

        Button:
            text: '7'
            on_release: app.screen_man.try_passcode(self.text)
        Button:
            text: '8'
            on_release: app.screen_man.try_passcode(self.text)
        Button:
            text: '9'
            on_release: app.screen_man.try_passcode(self.text)
        Button:
            text: '4'
            on_release: app.screen_man.try_passcode(self.text)
        Button:
            text: '5'
            on_release: app.screen_man.try_passcode(self.text)
        Button:
            text: '6'
            on_release: app.screen_man.try_passcode(self.text)
        Button:
            text: '1'
            on_release: app.screen_man.try_passcode(self.text)
        Button:
            text: '2'
            on_release: app.screen_man.try_passcode(self.text)
        Button:
            text: '3'
            on_release: app.screen_man.try_passcode(self.text)
        Button:
            text: '0'
            on_release: app.screen_man.try_passcode(self.text)

    Popup:
        id: fail_popup
        title: "Invalid Passcode"
        size_hint: None, None
        size: 150, 150
        on_parent: if self.parent == passcode_screen: self.parent.remove_widget(self)

        BoxLayout:
            orientation: 'vertical'
            padding: 5

            Button:
                text: 'OK'
                on_release: fail_popup.dismiss(); app.screen_man.current = 'main_screen'; app.variables.set('SYS_LOGGED_IN', '0')

<CameraScreen>:
    id: camera_screen

    Camera:
        id: cam
        #resolution: (800, 480)
        play: True if app.variables.SYS_REVERSE_CAM_ON == "1" else False




