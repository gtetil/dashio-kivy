#:kivy 1.9.1
#:import Factory kivy.factory.Factory
#:import KivyCamera engines.kivy_cv
#:import get_color_from_hex kivy.utils.get_color_from_hex
#:import get_hex_from_color kivy.utils.get_hex_from_color
#:import MyColorPicker modules.color_picker
#:import md_icons settings.icon_definitions.md_icons
#:import IconPicker modules.icon_picker


<SlideLayout>:
    anim_type: 'slide_above_anim'

<SlideMenu>:
    orientation: 'vertical'

    ModernButton:
        text: 'MAIN'
        on_release: app.screen_man.back_to_main(toggle=True)

    BoxLayout:
        orientation: 'horizontal'

        ModernButton:
            id: modify_screen
            disabled: not app.variables.SYS_DEBUG_MODE
            text: 'MODIFY\nSCREEN'
            text_size: self.size
            halign: 'center'
            valign: 'middle'
            on_release: app.screen_man.current = 'main_screen'; app.slide_layout.toggle_state()
            on_release: if not app.dynamic_layout.modify_mode: app.dynamic_layout.modify_screen(); #app.variables.toggle_update_clock(False)

        ModernButton:
            id: add_widget
            disabled: not app.variables.SYS_DEBUG_MODE
            text: 'ADD\nWIDGET'
            text_size: self.size
            halign: 'center'
            valign: 'middle'
            on_release: app.dynamic_layout.add_widget_json(); app.slide_layout.toggle_state()

    ModernButton:
        id: set_datetime
        disabled: False
        text: 'SET DATE/TIME'
        on_release: app.main_screen_ref.datetime_popup.datetime_picker.update(); app.main_screen_ref.datetime_popup.open()

    ModernButton:
        id: settings
        disabled: not app.variables.SYS_DEBUG_MODE
        text: 'SETTINGS'
        on_release: app.open_settings(); app.screen_man.current = 'main_screen'; app.slide_layout.toggle_state()
        on_release: if app.dynamic_layout.modify_mode: app.dynamic_layout.end_modify(); app.variables.toggle_update_clock(True)

    ModernButton:
        id: admin_login
        disabled: app.variables.SYS_DEBUG_MODE
        text: 'ADMIN LOGIN'
        on_release: app.screen_man.admin_toggle()

<ScreenManagement>:
    ignition_input: int(app.variables.DI_IGNITION)
    reverse_input: int(app.variables.SYS_REVERSE_CAM_ON)
    screen_background_color: ''
    app_ref: app
    main_screen: main_screen

    canvas.before:
        Color:
            rgba: get_color_from_hex(root.screen_background_color)
        Rectangle:
            pos: self.pos
            size: self.size

    Screen:
        name: 'off_screen'
    MainScreen:
        id: main_screen
        name: 'main_screen'
    CameraScreen:
        name: 'camera_screen'
    PasscodeScreen:
        id: passcode_screen
        name: 'passcode_screen'

<Variables>:
    app_ref: app

<DynamicLayout>:
    app_ref: app

<MyScatterLayout>:
    app_ref: app

<ScreenEditLabel>:
    text: 'Screen Edit Mode'
    color: 0,0,0,1
    text_size: self.size
    font_size: '12sp'
    halign: 'center'
    valign: 'middle'
    background_normal: ''
    background_down: ''
    background_color: 1,1,0,.3
    size_hint: None, None
    size: 800, 15
    pos_hint: {'middle': 1, 'bottom': 1}
    on_release: app.screen_man.back_to_main(toggle=False)

<MainScreen>:
    id: main_screen
    app_ref: app
    item_edit_popup: item_edit_popup.__self__
    engine_kill_popup: engine_kill_popup.__self__
    numeric_input_popup: numeric_input_popup.__self__
    datetime_popup: datetime_popup.__self__
    color_select: color_select.__self__
    icon_select: icon_select.__self__
    on_parent: app.main_screen_ref = self

    FloatLayout:
        id: main_layout
        orientation: 'horizontal'

        Button:
            id: alarm_indicator
            opacity: 0
            background_normal: ''
            background_color: 1,0,0,1

    ScreenItemEditPopup:
        id: item_edit_popup
        app_ref: app
        modify_mode: app.dynamic_layout.modify_mode
        dynamic_layout: app.dynamic_layout
        button_on_text: button_on_text
        button_off_text: button_off_text
        invert_check: invert_check
        color_on_button: color_on_button
        color_on_text: color_on_text
        color_off_button: color_off_button
        color_off_text: color_off_text
        border_color: border_color
        variable_spinner: variable_spinner
        widget_spinner: widget_spinner
        icon_on_button: icon_on_button
        icon_off_button: icon_off_button
        graphic_type_spinner: graphic_type_spinner
        title: "Modify"
        size_hint: None, None
        size: 450, 265
        pos_hint: {'middle': 1, 'top': 1}
        on_parent: if self.parent == main_screen: self.parent.remove_widget(self)

        BoxLayout:
            orientation: 'vertical'
            spacing: 5

            ScrollView:
                size_hint: 1, 0.8

                GridLayout:
                    id: item_edit_grid
                    cols: 1
                    spacing: 5
                    padding: 5
                    size_hint_y: None
                    #row_default_height: '40dp'
                    #row_force_default: True
                    height: 500

                    BoxLayout:
                        orientation: 'horizontal'
                        padding: 1

                        Label:
                            text: 'Variable:'
                            size_hint: .25, 1
                            text_size: self.size
                            halign: 'left'
                            valign: 'middle'

                        Spinner:
                            id: variable_spinner
                            size_hint: .75, 1
                            option_cls: Factory.get("SpinnerLabel")
                            font_size: '13sp'
                            text: 'DI_0'
                            values: app.variables.display_var_tags

                    BoxLayout:
                        orientation: 'horizontal'
                        padding: 1

                        Label:
                            text: 'Widget:'
                            size_hint: .25, 1
                            text_size: self.size
                            halign: 'left'
                            valign: 'middle'

                        Spinner:
                            id: widget_spinner
                            size_hint: .75, 1
                            option_cls: Factory.get("SpinnerLabel")
                            font_size: '13sp'
                            text: 'Toggle Button'
                            values: ['Indicator', 'Button', 'Toggle Button', 'Label', 'Numeric Input', 'Image']

                    BoxLayout:
                        orientation: 'horizontal'
                        padding: 1

                        Label:
                            text: 'Graphic Type:'
                            size_hint: .25, 1
                            text_size: self.size
                            halign: 'left'
                            valign: 'middle'

                        Spinner:
                            id: graphic_type_spinner
                            size_hint: .75, 1
                            option_cls: Factory.get("SpinnerLabel")
                            font_size: '13sp'
                            text: 'Text'
                            values: ['Text', 'Icon']
                            on_text: item_edit_popup.graphic_type(self.text)

                    BoxLayout:
                        orientation: 'horizontal'
                        padding: 1

                        DLabel:
                            text: 'On Text:'
                            size_hint: .25, 1
                            text_size: self.size
                            halign: 'left'
                            valign: 'middle'
                            disable_gray: button_on_text.disable_gray

                        DTextInput:
                            id: button_on_text
                            size_hint: .75, 1
                            disable_gray: True

                    BoxLayout:
                        orientation: 'horizontal'
                        padding: 1

                        DLabel:
                            text: 'On Icon:'
                            size_hint: .25, 1
                            text_size: self.size
                            halign: 'left'
                            valign: 'middle'
                            disable_gray: icon_on_button.disable_gray

                        Icon:
                            id: icon_on_button
                            size_hint: .1, 1
                            disable_gray: False
                            on_release: icon_select.icon_open(item_edit_popup, 'icon_on')

                        BoxLayout:
                            size_hint: .65, 1

                    BoxLayout:
                        orientation: 'horizontal'
                        padding: 1

                        Label:
                            text: 'On Color\nText/Bckgnd:'
                            size_hint: .25, 1
                            text_size: self.size
                            halign: 'left'
                            valign: 'middle'

                        ColorButton:
                            id: color_on_text
                            on_release: color_select.color_open(item_edit_popup, 'on_text')

                        BoxLayout:
                            size_hint: .01, 1

                        ColorButton:
                            id: color_on_button
                            on_release: color_select.color_open(item_edit_popup, 'on_button')

                        BoxLayout:
                            size_hint: .53, 1

                    BoxLayout:
                        orientation: 'horizontal'
                        padding: 1

                        DLabel:
                            text: 'Off Text:'
                            size_hint: .25, 1
                            text_size: self.size
                            halign: 'left'
                            valign: 'middle'
                            disable_gray: button_on_text.disable_gray

                        DTextInput:
                            id: button_off_text
                            size_hint: .75, 1
                            disable_gray: True

                    BoxLayout:
                        orientation: 'horizontal'
                        padding: 1

                        DLabel:
                            text: 'Off Icon:'
                            size_hint: .25, 1
                            text_size: self.size
                            halign: 'left'
                            valign: 'middle'
                            disable_gray: icon_off_button.disable_gray

                        Icon:
                            id: icon_off_button
                            size_hint: .1, 1
                            disable_gray: False
                            on_release: icon_select.icon_open(item_edit_popup, 'icon_off')

                        BoxLayout:
                            size_hint: .65, 1

                    BoxLayout:
                        orientation: 'horizontal'
                        padding: 1

                        Label:
                            text: 'Off Color\nText/Bckgnd:'
                            size_hint: .25, 1
                            text_size: self.size
                            halign: 'left'
                            valign: 'middle'

                        ColorButton:
                            id: color_off_text
                            on_release: color_select.color_open(item_edit_popup, 'off_text')

                        BoxLayout:
                            size_hint: .01, 1

                        ColorButton:
                            id: color_off_button
                            on_release: color_select.color_open(item_edit_popup, 'off_button')

                        BoxLayout:
                            size_hint: .53, 1

                    BoxLayout:
                        orientation: 'horizontal'
                        padding: 1

                        Label:
                            text: 'Border Color:'
                            size_hint: .25, 1
                            text_size: self.size
                            halign: 'left'
                            valign: 'middle'

                        ColorButton:
                            id: border_color
                            on_release: color_select.color_open(item_edit_popup, 'border_color')

                        BoxLayout:
                            size_hint: .64, 1


                    BoxLayout:
                        orientation: 'horizontal'
                        padding: 1

                        Label:
                            text: 'Invert:'
                            size_hint: .25, 1
                            text_size: self.size
                            halign: 'left'
                            valign: 'middle'

                        CheckBox:
                            id: invert_check
                            size_hint: .05, 1
                            halign: 'left'

                        BoxLayout:
                            size_hint: .70, 1

            SettingSpacer:

            BoxLayout:
                orientation: 'horizontal'
                size_hint: 1, 0.2
                spacing: 5

                ModernButton:
                    text: 'Del'
                    size_hint: .1, 1
                    on_release: item_edit_popup.delete_item()

                BoxLayout:
                    size_hint: .1, 1

                ModernButton:
                    text: 'OK'
                    size_hint: .2, 1
                    on_release: item_edit_popup.save_item()

                ModernButton:
                    text: 'Copy'
                    size_hint: .2, 1
                    on_release: item_edit_popup.copy_item()

                ModernButton:
                    text: 'Cancel'
                    size_hint: .2, 1
                    on_release: item_edit_popup.dismiss()

    Popup:
        id: engine_kill_popup
        title: "Engine Kill"
        size_hint: None, None
        size: 300, 200
        on_parent: if self.parent == main_screen: self.parent.remove_widget(self)

        BoxLayout:
            orientation: 'vertical'
            padding: 5

            Label:
                text: 'Out of PARK without LOGIN, engine has been killed.'
                text_size: self.size
                halign: 'center'
                valign: 'middle'

            ModernButton:
                text: 'OK'
                on_release: engine_kill_popup.dismiss()

    NumericInputPopup:
        id: numeric_input_popup
        app_ref: app
        title: "Numeric Input"
        size_hint: None, None
        size: 150, 250
        pos_hint: {'middle': 1, 'top': 1}
        numeric_input: numeric_input
        on_parent: if self.parent == main_screen: self.parent.remove_widget(self)

        BoxLayout:
            orientation: 'vertical'
            padding: 5

            TextInput:
                id: numeric_input
                size_hint: 1, 0.25
                font_size: '25sp'
                input_filter: 'float'

            SettingSpacer:

            ModernButton:
                text: 'OK'
                size_hint: 1, .37
                on_release: numeric_input_popup.save_numeric(numeric_input.text)

            SettingSpacer:

            ModernButton:
                text: 'Cancel'
                size_hint: 1, .37
                on_release: numeric_input_popup.dismiss()

    Popup:
        id: datetime_popup
        title: "Set Date/Time"
        size_hint: None, None
        size: 515, 350
        datetime_picker: datetime_picker
        on_parent: if self.parent == main_screen: self.parent.remove_widget(self)

        BoxLayout:
            orientation: 'vertical'
            padding: 0, 15, 0, 5
            spacing: 15

            DateTimePicker:
                id: datetime_picker
                size_hint_y: .8

            ModernButton:
                size_hint_y: .2
                text: 'OK'
                on_release: datetime_picker.set_rpi_datetime(); datetime_popup.dismiss()

    ColorSelector:
        id: color_select
        app_ref: app
        widget_color: ''
        size_hint: None, None
        size: 400, 480
        pos_hint: {'middle': 1, 'center': 1}
        clr_picker: clr_picker
        title: 'Color Selector'
        content:content
        on_parent: if self.parent == main_screen: self.parent.remove_widget(self)

        BoxLayout:
            id: content
            orientation: 'vertical'
            spacing: 5

            MyColorPicker:
                id: clr_picker

            BoxLayout:
                size_hint_y: None
                height: '50sp'
                Button:
                    text: 'Ok'
                    on_release:
                        color_select.widget_color = clr_picker.current_color
                        color_select.color_save()
                Button:
                    text: 'Cancel'
                    on_release:
                        color_select.color_close()

    IconSelector:
        id: icon_select
        icon_picker: icon_picker
        title: 'Icon Selector'
        icon: 'no-selection'
        on_parent: if self.parent == main_screen: self.parent.remove_widget(self), self.icon_picker.populate_list()

        BoxLayout:
            orientation: 'vertical'
            spacing: 5

            IconPicker:
                id: icon_picker

            BoxLayout:
                size_hint_y: None
                height: '50sp'
                Button:
                    text: 'Select Icon'
                    on_release:
                        icon_select.icon = icon_picker.icon
                        icon_select.icon_save()
                Button:
                    text: 'Remove Icon'
                    on_release:
                        icon_select.icon = 'no-selection'
                        icon_select.icon_save()

<Icon@Button>:
    value: 'no-selection'
    text: u"{}".format(md_icons[self.value]) if not '' else ''
    text_size: self.size
    font_size: self.size[1] / 2
    halign: 'center'
    valign: 'middle'
    font_name: 'pics/materialdesignicons-webfont.ttf'
    disable_gray: True
    opacity: 1 if self.disable_gray else .7
    disabled: not self.disable_gray

<DTextInput@TextInput>:
    disable_gray: True
    opacity: 1 if self.disable_gray else .7
    disabled: not self.disable_gray

<DLabel@Label>:
    disable_gray: True
    opacity: 1 if self.disable_gray else .7
    disabled: not self.disable_gray

<SpinnerLabel@SpinnerOption>:
    font_size: '13sp'

<ColorButton@Button>:
    background_normal: ''
    background_down: ''
    size_hint: .1, 1
    text: 'T' if self.background_color == [0,0,0,0] else ''
    color: 1,1,1,1
    font_size: '20sp'

<DynToggleButton, DynButton>:
    ignition_input: int(app.variables.DI_IGNITION)
    text_size: self.size
    font_size: '18sp'
    halign: 'center'
    valign: 'middle'
    background_normal: ''
    background_down: ''
    background_color: 1,1,1,0
    color: 0,0,0,1
    canvas.before:
        Clear
        Color:
            rgba: get_color_from_hex(self.border_color)
        RoundedRectangle:
            size: self.size[0] - 2, self.size[1] - 2
            pos: self.pos[0] + 1, self.pos[1] + 1
            radius: (dp(0),)
        Color:
            rgba: get_color_from_hex(self.canvas_color)
        RoundedRectangle:
            size: self.size[0] - 4, self.size[1] - 4
            pos: self.pos[0] + 2, self.pos[1] + 2
            radius: (dp(0),)

<DynImage>:
    source: 'pics/ti_auto_long.png'
    allow_stretch: True
    keep_ratio: False

<ModernButton@Button>:
    background_normal: 'pics/button.png'
    background_down: 'pics/button_pressed.png'

<PasscodeButton@ModernButton>:
    on_release: app.screen_man.try_passcode(self.text)

<DynLabel>:
    text_size: self.size
    font_size: self.size[1] / 2
    halign: 'center'
    valign: 'middle'
    color: 0,0,0,1

<DynNumericInput>:
    text_size: self.size
    font_size: self.size[1] / 2
    halign: 'center'
    valign: 'middle'
    color: 0,0,0,1
    var_value: ''

<DynItem>:
    app_ref: app
    data_change: app.variables.data_change
    var_tag: ''
    var_alias: ''
    widget: ''
    button_on_text: ''
    button_off_text: ''
    invert: False
    color_on: ''
    color_off: ''
    color_on_text: ''
    color_off_text: ''
    border_color: ''
    icon_on: ''
    icon_off: ''
    graphic_type: ''


<PasscodeScreen>:
    id: passcode_screen
    fail_popup: fail_popup.__self__
    app_ref: app

    GridLayout:
        cols: 3
        rows: 4
        spacing: 5
        padding: 5
        size_hint_x: None
        width: 400
        pos: 200, 0

        PasscodeButton:
            text: '7'
        PasscodeButton:
            text: '8'
        PasscodeButton:
            text: '9'
        PasscodeButton:
            text: '4'
        PasscodeButton:
            text: '5'
        PasscodeButton:
            text: '6'
        PasscodeButton:
            text: '1'
        PasscodeButton:
            text: '2'
        PasscodeButton:
            text: '3'
        PasscodeButton:
            text: '0'

    Popup:
        id: fail_popup
        title: "Invalid Passcode"
        size_hint: None, None
        size: 150, 150
        on_parent: if self.parent == passcode_screen: self.parent.remove_widget(self)

        BoxLayout:
            id: fail_layout
            orientation: 'vertical'
            padding: 5

            ModernButton:
                id: fail_button
                text: 'OK'
                on_release: fail_popup.dismiss(); app.screen_man.current = 'main_screen'

<CameraScreen>:
    id: camera_screen
    camera_toggle: app.variables.SYS_REVERSE_CAM_ON

<-SettingAlias>:
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(10)
    content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos

        Label:
            size_hint_x: .66
            id: labellayout
            markup: True
            text: root.title or ''
            font_size: '15sp'
            text_size: self.width - 32, None

        BoxLayout:
            id: content
            size_hint_x: .33

            Label:
                text: root.value or ''
                pos: root.pos
                font_size: '15sp'

<-SettingAction>:
    app_ref: app
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(20)
    content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos

        Label:
            size_hint_x: .66
            id: labellayout
            markup: True
            text: root.title or ''
            font_size: '15sp'
            text_size: self.width - 32, None

        BoxLayout:
            id: content
            size_hint_x: .33

            Label:
                #text: root.value or ''
                pos: root.pos
                font_size: '15sp'

<-SettingScript>:
    app_ref: app
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(10)
    #content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos

        Label:
            #size_hint_x: .66
            id: labellayout
            markup: True
            multiline: True
            text: (root.value or 'new script').replace("[tab]", '    ')
            font_size: '15sp'
            text_size: self.width - 32, None

        #BoxLayout:
        #    id: content
        #    size_hint_x: .33

        #    Label:
        #        text: root.value or ''
        #        pos: root.pos
        #        font_size: '15sp'

<-SettingPath>:
    app_ref: app
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(10)
    content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos

        Label:
            size_hint_x: .66
            id: labellayout
            markup: True
            text: u'{0}\n[size=13sp][color=999999]{1}[/color][/size]'.format(root.title or '', root.desc or '')
            font_size: '15sp'
            text_size: self.width - 32, None

        BoxLayout:
            id: content
            size_hint_x: .33

            Label:
                text: root.value or ''
                pos: root.pos
                font_size: '15sp'

<-SettingColorPicker>:
    app_ref: app
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(10)
    content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos

        Label:
            size_hint_x: .66
            id: labellayout
            markup: True
            text: u'{0}\n[size=13sp][color=999999]{1}[/color][/size]'.format(root.title or '', root.desc or '')
            font_size: '15sp'
            text_size: self.width - 32, None

        RelativeLayout:
            id: content
            size_hint_x: .33
            pos: self.parent.pos
            size: self.parent.size

            ModernButton:
                id: color_off_button
                background_normal: ''
                background_down: ''
                size_hint: None, None
                width: '30dp'
                height: '30dp'
                pos_hint: {'center_x': 0.5, 'center_y': 0.5}
                background_color: get_color_from_hex(root.value or '#ffffffff')
                text: 'T' if self.background_color == [0,0,0,0] else ''
                color: 1,1,1,1
                font_size: '20sp'

            #Label:
            #    text: root.value or ''
            #    pos: root.pos
            #    font_size: '15sp'

<-SettingCSVReader>:
    app_ref: app
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(20)
    content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos

        Label:
            size_hint_x: .66
            id: labellayout
            markup: True
            text: root.title or ''
            font_size: '15sp'
            text_size: self.width - 32, None

        BoxLayout:
            id: content
            size_hint_x: .33

            Label:
                #text: root.value or ''
                pos: root.pos
                font_size: '15sp'

<-SettingViewer>:
    app_ref: app
    size_hint: .25, None
    height: labellayout.texture_size[1] + dp(20)
    content: content
    canvas:
        Color:
            rgba: 47 / 255., 167 / 255., 212 / 255., self.selected_alpha
        Rectangle:
            pos: self.x, self.y + 1
            size: self.size
        Color:
            rgb: .2, .2, .2
        Rectangle:
            pos: self.x, self.y - 2
            size: self.width, 1

    BoxLayout:
        pos: root.pos

        Label:
            size_hint_x: .66
            id: labellayout
            markup: True
            text: root.title or ''
            font_size: '15sp'
            text_size: self.width - 32, None

        BoxLayout:
            id: content
            size_hint_x: .33

            Label:
                #text: root.value or ''
                pos: root.pos
                font_size: '15sp'

<-Settings>:
    orientation: 'horizontal'
    canvas.before:
        Color:
            rgb: .15,.15,.15
        Rectangle:
            pos: self.pos
            size: self.size




